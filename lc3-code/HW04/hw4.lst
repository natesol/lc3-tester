(0000) 3000  0011000000000000 (   5)                 .ORIG x3000
(3000) 2C14  0010110000010100 (   7)                 LD    R6 Stack_Address
(3001) E032  1110000000110010 (   9)                 LEA   R0 Enter_Number_Message
(3002) F022  1111000000100010 (  10)                 TRAP  x22
(3003) 48DF  0100100011011111 (  12)                 JSR   GetNum
(3004) 5260  0101001001100000 (  15)                 AND   R1 R1 #0
(3005) E410  1110010000010000 (  16)                 LEA   R2 Positions
(3006) 73BC  0111001110111100 (  17)                 STR   R1 R6 #-4
(3007) 75BD  0111010110111101 (  18)                 STR   R2 R6 #-3
(3008) 73BE  0111001110111110 (  19)                 STR   R1 R6 #-2
(3009) 71BF  0111000110111111 (  20)                 STR   R0 R6 #-1
(300A) 1DBC  0001110110111100 (  21)                 ADD   R6 R6 #-4
(300B) 49E6  0100100111100110 (  22)                 JSR   NQueenSolver
(300C) 1DA4  0001110110100100 (  23)                 ADD   R6 R6 #4
(300D) 1620  0001011000100000 (  25)                 ADD   R3 R0 #0
(300E) E04D  1110000001001101 (  27)                 LEA   R0 Number_Of_Solutions_Message
(300F) F022  1111000000100010 (  28)                 TRAP  x22
(3010) 77BF  0111011110111111 (  30)                 STR   R3 R6 #-1
(3011) 1DBF  0001110110111111 (  31)                 ADD   R6 R6 #-1
(3012) 4951  0100100101010001 (  32)                 JSR   PrintNum
(3013) 1DA1  0001110110100001 (  33)                 ADD   R6 R6 #1
(3014) F025  1111000000100101 (  35)                 TRAP  x25
(3015) BFFF  1011111111111111 (  41) Stack_Address   .FILL xBFFF
(3016) 0000  0000000000000000 (  42) Positions       .FILL x0000
(3017) 0000  0000000000000000 (  42)                 .FILL x0000
(3018) 0000  0000000000000000 (  42)                 .FILL x0000
(3019) 0000  0000000000000000 (  42)                 .FILL x0000
(301A) 0000  0000000000000000 (  42)                 .FILL x0000
(301B) 0000  0000000000000000 (  42)                 .FILL x0000
(301C) 0000  0000000000000000 (  42)                 .FILL x0000
(301D) 0000  0000000000000000 (  42)                 .FILL x0000
(301E) 0000  0000000000000000 (  42)                 .FILL x0000
(301F) 0000  0000000000000000 (  42)                 .FILL x0000
(3020) 0000  0000000000000000 (  42)                 .FILL x0000
(3021) 0000  0000000000000000 (  42)                 .FILL x0000
(3022) 0000  0000000000000000 (  42)                 .FILL x0000
(3023) 0000  0000000000000000 (  42)                 .FILL x0000
(3024) 0000  0000000000000000 (  42)                 .FILL x0000
(3025) 0000  0000000000000000 (  42)                 .FILL x0000
(3026) 0000  0000000000000000 (  42)                 .FILL x0000
(3027) 0000  0000000000000000 (  42)                 .FILL x0000
(3028) 0000  0000000000000000 (  42)                 .FILL x0000
(3029) 0000  0000000000000000 (  42)                 .FILL x0000
(302A) 0000  0000000000000000 (  42)                 .FILL x0000
(302B) 0000  0000000000000000 (  42)                 .FILL x0000
(302C) 0000  0000000000000000 (  42)                 .FILL x0000
(302D) 0000  0000000000000000 (  42)                 .FILL x0000
(302E) 0000  0000000000000000 (  42)                 .FILL x0000
(302F) 0000  0000000000000000 (  42)                 .FILL x0000
(3030) 0000  0000000000000000 (  42)                 .FILL x0000
(3031) 0000  0000000000000000 (  42)                 .FILL x0000
(3032) 0000  0000000000000000 (  42)                 .FILL x0000
(3033) 0000  0000000000000000 (  42)                 .FILL x0000
(3034) 0045  0000000001000101 (  45) Enter_Number_Message .FILL x0045
(3035) 006E  0000000001101110 (  45)                 .FILL x006E
(3036) 0074  0000000001110100 (  45)                 .FILL x0074
(3037) 0065  0000000001100101 (  45)                 .FILL x0065
(3038) 0072  0000000001110010 (  45)                 .FILL x0072
(3039) 0020  0000000000100000 (  45)                 .FILL x0020
(303A) 004E  0000000001001110 (  45)                 .FILL x004E
(303B) 002C  0000000000101100 (  45)                 .FILL x002C
(303C) 0020  0000000000100000 (  45)                 .FILL x0020
(303D) 0069  0000000001101001 (  45)                 .FILL x0069
(303E) 002E  0000000000101110 (  45)                 .FILL x002E
(303F) 0065  0000000001100101 (  45)                 .FILL x0065
(3040) 002E  0000000000101110 (  45)                 .FILL x002E
(3041) 002C  0000000000101100 (  45)                 .FILL x002C
(3042) 0020  0000000000100000 (  45)                 .FILL x0020
(3043) 006E  0000000001101110 (  45)                 .FILL x006E
(3044) 0075  0000000001110101 (  45)                 .FILL x0075
(3045) 006D  0000000001101101 (  45)                 .FILL x006D
(3046) 0062  0000000001100010 (  45)                 .FILL x0062
(3047) 0065  0000000001100101 (  45)                 .FILL x0065
(3048) 0072  0000000001110010 (  45)                 .FILL x0072
(3049) 0020  0000000000100000 (  45)                 .FILL x0020
(304A) 0062  0000000001100010 (  45)                 .FILL x0062
(304B) 0065  0000000001100101 (  45)                 .FILL x0065
(304C) 0074  0000000001110100 (  45)                 .FILL x0074
(304D) 0077  0000000001110111 (  45)                 .FILL x0077
(304E) 0065  0000000001100101 (  45)                 .FILL x0065
(304F) 0065  0000000001100101 (  45)                 .FILL x0065
(3050) 006E  0000000001101110 (  45)                 .FILL x006E
(3051) 0020  0000000000100000 (  45)                 .FILL x0020
(3052) 0031  0000000000110001 (  45)                 .FILL x0031
(3053) 0020  0000000000100000 (  45)                 .FILL x0020
(3054) 0074  0000000001110100 (  45)                 .FILL x0074
(3055) 006F  0000000001101111 (  45)                 .FILL x006F
(3056) 0020  0000000000100000 (  45)                 .FILL x0020
(3057) 0033  0000000000110011 (  45)                 .FILL x0033
(3058) 0030  0000000000110000 (  45)                 .FILL x0030
(3059) 003A  0000000000111010 (  45)                 .FILL x003A
(305A) 0020  0000000000100000 (  45)                 .FILL x0020
(305B) 0000  0000000000000000 (  45)                 .FILL x0000
(305C) 004E  0000000001001110 (  46) Number_Of_Solutions_Message .FILL x004E
(305D) 0075  0000000001110101 (  46)                 .FILL x0075
(305E) 006D  0000000001101101 (  46)                 .FILL x006D
(305F) 0062  0000000001100010 (  46)                 .FILL x0062
(3060) 0065  0000000001100101 (  46)                 .FILL x0065
(3061) 0072  0000000001110010 (  46)                 .FILL x0072
(3062) 0020  0000000000100000 (  46)                 .FILL x0020
(3063) 006F  0000000001101111 (  46)                 .FILL x006F
(3064) 0066  0000000001100110 (  46)                 .FILL x0066
(3065) 0020  0000000000100000 (  46)                 .FILL x0020
(3066) 0070  0000000001110000 (  46)                 .FILL x0070
(3067) 006F  0000000001101111 (  46)                 .FILL x006F
(3068) 0073  0000000001110011 (  46)                 .FILL x0073
(3069) 0073  0000000001110011 (  46)                 .FILL x0073
(306A) 0069  0000000001101001 (  46)                 .FILL x0069
(306B) 0062  0000000001100010 (  46)                 .FILL x0062
(306C) 006C  0000000001101100 (  46)                 .FILL x006C
(306D) 0065  0000000001100101 (  46)                 .FILL x0065
(306E) 0020  0000000000100000 (  46)                 .FILL x0020
(306F) 0073  0000000001110011 (  46)                 .FILL x0073
(3070) 006F  0000000001101111 (  46)                 .FILL x006F
(3071) 006C  0000000001101100 (  46)                 .FILL x006C
(3072) 0075  0000000001110101 (  46)                 .FILL x0075
(3073) 0074  0000000001110100 (  46)                 .FILL x0074
(3074) 0069  0000000001101001 (  46)                 .FILL x0069
(3075) 006F  0000000001101111 (  46)                 .FILL x006F
(3076) 006E  0000000001101110 (  46)                 .FILL x006E
(3077) 0073  0000000001110011 (  46)                 .FILL x0073
(3078) 003A  0000000000111010 (  46)                 .FILL x003A
(3079) 0020  0000000000100000 (  46)                 .FILL x0020
(307A) 0000  0000000000000000 (  46)                 .FILL x0000
(307B) FFD3  1111111111010011 (  54) Minus_ASCII_Check .FILL xFFD3
(307C) FFD0  1111111111010000 (  55) Zero_ASCII_Check .FILL xFFD0
(307D) 0045  0000000001000101 (  58) Overflow_Error_Message .FILL x0045
(307E) 0072  0000000001110010 (  58)                 .FILL x0072
(307F) 0072  0000000001110010 (  58)                 .FILL x0072
(3080) 006F  0000000001101111 (  58)                 .FILL x006F
(3081) 0072  0000000001110010 (  58)                 .FILL x0072
(3082) 0021  0000000000100001 (  58)                 .FILL x0021
(3083) 0020  0000000000100000 (  58)                 .FILL x0020
(3084) 004E  0000000001001110 (  58)                 .FILL x004E
(3085) 0075  0000000001110101 (  58)                 .FILL x0075
(3086) 006D  0000000001101101 (  58)                 .FILL x006D
(3087) 0062  0000000001100010 (  58)                 .FILL x0062
(3088) 0065  0000000001100101 (  58)                 .FILL x0065
(3089) 0072  0000000001110010 (  58)                 .FILL x0072
(308A) 0020  0000000000100000 (  58)                 .FILL x0020
(308B) 006F  0000000001101111 (  58)                 .FILL x006F
(308C) 0076  0000000001110110 (  58)                 .FILL x0076
(308D) 0065  0000000001100101 (  58)                 .FILL x0065
(308E) 0072  0000000001110010 (  58)                 .FILL x0072
(308F) 0066  0000000001100110 (  58)                 .FILL x0066
(3090) 006C  0000000001101100 (  58)                 .FILL x006C
(3091) 006F  0000000001101111 (  58)                 .FILL x006F
(3092) 0077  0000000001110111 (  58)                 .FILL x0077
(3093) 0065  0000000001100101 (  58)                 .FILL x0065
(3094) 0064  0000000001100100 (  58)                 .FILL x0064
(3095) 0021  0000000000100001 (  58)                 .FILL x0021
(3096) 0020  0000000000100000 (  58)                 .FILL x0020
(3097) 0050  0000000001010000 (  58)                 .FILL x0050
(3098) 006C  0000000001101100 (  58)                 .FILL x006C
(3099) 0065  0000000001100101 (  58)                 .FILL x0065
(309A) 0061  0000000001100001 (  58)                 .FILL x0061
(309B) 0073  0000000001110011 (  58)                 .FILL x0073
(309C) 0065  0000000001100101 (  58)                 .FILL x0065
(309D) 0020  0000000000100000 (  58)                 .FILL x0020
(309E) 0065  0000000001100101 (  58)                 .FILL x0065
(309F) 006E  0000000001101110 (  58)                 .FILL x006E
(30A0) 0074  0000000001110100 (  58)                 .FILL x0074
(30A1) 0065  0000000001100101 (  58)                 .FILL x0065
(30A2) 0072  0000000001110010 (  58)                 .FILL x0072
(30A3) 0020  0000000000100000 (  58)                 .FILL x0020
(30A4) 0061  0000000001100001 (  58)                 .FILL x0061
(30A5) 0067  0000000001100111 (  58)                 .FILL x0067
(30A6) 0061  0000000001100001 (  58)                 .FILL x0061
(30A7) 0069  0000000001101001 (  58)                 .FILL x0069
(30A8) 006E  0000000001101110 (  58)                 .FILL x006E
(30A9) 003A  0000000000111010 (  58)                 .FILL x003A
(30AA) 0020  0000000000100000 (  58)                 .FILL x0020
(30AB) 0000  0000000000000000 (  58)                 .FILL x0000
(30AC) 0045  0000000001000101 (  59) Invalid_Error_Message .FILL x0045
(30AD) 0072  0000000001110010 (  59)                 .FILL x0072
(30AE) 0072  0000000001110010 (  59)                 .FILL x0072
(30AF) 006F  0000000001101111 (  59)                 .FILL x006F
(30B0) 0072  0000000001110010 (  59)                 .FILL x0072
(30B1) 0021  0000000000100001 (  59)                 .FILL x0021
(30B2) 0020  0000000000100000 (  59)                 .FILL x0020
(30B3) 0059  0000000001011001 (  59)                 .FILL x0059
(30B4) 006F  0000000001101111 (  59)                 .FILL x006F
(30B5) 0075  0000000001110101 (  59)                 .FILL x0075
(30B6) 0020  0000000000100000 (  59)                 .FILL x0020
(30B7) 0064  0000000001100100 (  59)                 .FILL x0064
(30B8) 0069  0000000001101001 (  59)                 .FILL x0069
(30B9) 0064  0000000001100100 (  59)                 .FILL x0064
(30BA) 006E  0000000001101110 (  59)                 .FILL x006E
(30BB) 0027  0000000000100111 (  59)                 .FILL x0027
(30BC) 0074  0000000001110100 (  59)                 .FILL x0074
(30BD) 0020  0000000000100000 (  59)                 .FILL x0020
(30BE) 0065  0000000001100101 (  59)                 .FILL x0065
(30BF) 006E  0000000001101110 (  59)                 .FILL x006E
(30C0) 0074  0000000001110100 (  59)                 .FILL x0074
(30C1) 0065  0000000001100101 (  59)                 .FILL x0065
(30C2) 0072  0000000001110010 (  59)                 .FILL x0072
(30C3) 0020  0000000000100000 (  59)                 .FILL x0020
(30C4) 0061  0000000001100001 (  59)                 .FILL x0061
(30C5) 0020  0000000000100000 (  59)                 .FILL x0020
(30C6) 006E  0000000001101110 (  59)                 .FILL x006E
(30C7) 0075  0000000001110101 (  59)                 .FILL x0075
(30C8) 006D  0000000001101101 (  59)                 .FILL x006D
(30C9) 0062  0000000001100010 (  59)                 .FILL x0062
(30CA) 0065  0000000001100101 (  59)                 .FILL x0065
(30CB) 0072  0000000001110010 (  59)                 .FILL x0072
(30CC) 002E  0000000000101110 (  59)                 .FILL x002E
(30CD) 0020  0000000000100000 (  59)                 .FILL x0020
(30CE) 0050  0000000001010000 (  59)                 .FILL x0050
(30CF) 006C  0000000001101100 (  59)                 .FILL x006C
(30D0) 0065  0000000001100101 (  59)                 .FILL x0065
(30D1) 0061  0000000001100001 (  59)                 .FILL x0061
(30D2) 0073  0000000001110011 (  59)                 .FILL x0073
(30D3) 0065  0000000001100101 (  59)                 .FILL x0065
(30D4) 0020  0000000000100000 (  59)                 .FILL x0020
(30D5) 0065  0000000001100101 (  59)                 .FILL x0065
(30D6) 006E  0000000001101110 (  59)                 .FILL x006E
(30D7) 0074  0000000001110100 (  59)                 .FILL x0074
(30D8) 0065  0000000001100101 (  59)                 .FILL x0065
(30D9) 0072  0000000001110010 (  59)                 .FILL x0072
(30DA) 0020  0000000000100000 (  59)                 .FILL x0020
(30DB) 0061  0000000001100001 (  59)                 .FILL x0061
(30DC) 0067  0000000001100111 (  59)                 .FILL x0067
(30DD) 0061  0000000001100001 (  59)                 .FILL x0061
(30DE) 0069  0000000001101001 (  59)                 .FILL x0069
(30DF) 006E  0000000001101110 (  59)                 .FILL x006E
(30E0) 003A  0000000000111010 (  59)                 .FILL x003A
(30E1) 0020  0000000000100000 (  59)                 .FILL x0020
(30E2) 0000  0000000000000000 (  59)                 .FILL x0000
(30E3) 1DB8  0001110110111000 (  63) GetNum          ADD   R6 R6 #-8
(30E4) 7382  0111001110000010 (  64)                 STR   R1 R6 #2
(30E5) 7583  0111010110000011 (  65)                 STR   R2 R6 #3
(30E6) 7784  0111011110000100 (  66)                 STR   R3 R6 #4
(30E7) 7985  0111100110000101 (  67)                 STR   R4 R6 #5
(30E8) 7B86  0111101110000110 (  68)                 STR   R5 R6 #6
(30E9) 7F87  0111111110000111 (  69)                 STR   R7 R6 #7
(30EA) 5020  0101000000100000 (  72)                 AND   R0 R0 #0
(30EB) 5260  0101001001100000 (  73)                 AND   R1 R1 #0
(30EC) 54A0  0101010010100000 (  74)                 AND   R2 R2 #0
(30ED) 56E0  0101011011100000 (  75)                 AND   R3 R3 #0
(30EE) 5920  0101100100100000 (  76)                 AND   R4 R4 #0
(30EF) 5B60  0101101101100000 (  77)                 AND   R5 R5 #0
(30F0) 5FE0  0101111111100000 (  79)                 AND   R7 R7 #0
(30F1) 7180  0111000110000000 (  82)                 STR   R0 R6 #0
(30F2) 7181  0111000110000001 (  83)                 STR   R0 R6 #1
(30F3) F020  1111000000100000 (  87) Get_Input_Loop  TRAP  x20
(30F4) F021  1111000000100001 (  88)                 TRAP  x21
(30F5) 1836  0001100000110110 (  89)                 ADD   R4 R0 #-10
(30F6) 0456  0000010001010110 (  90)                 BRZ   End_GetNum
(30F7) 16E0  0001011011100000 (  91)                 ADD   R3 R3 #0
(30F8) 0425  0000010000100101 (  92)                 BRZ   First_Character_Handler
(30F9) 2B82  0010101110000010 (  94) Check_Character LD    R5 Zero_ASCII_Check
(30FA) 1805  0001100000000101 (  95)                 ADD   R4 R0 R5
(30FB) 0837  0000100000110111 (  96)                 BRN   Invalid_Input_Handler
(30FC) 1B36  0001101100110110 (  97)                 ADD   R5 R4 #-10
(30FD) 0635  0000011000110101 (  98)                 BRZP  Invalid_Input_Handler
(30FE) 6F81  0110111110000001 (  99)                 LDR   R7 R6 #1
(30FF) 0A3A  0000101000111010 ( 100)                 BRNP  Error_Handler_Loop
(3100) 1AFB  0001101011111011 ( 101)                 ADD   R5 R3 #-5
(3101) 0635  0000011000110101 ( 102)                 BRZP  Input_Overflow_Handler
(3102) 1520  0001010100100000 ( 105)                 ADD   R2 R4 #0
(3103) 6F80  0110111110000000 ( 106)                 LDR   R7 R6 #0
(3104) 0602  0000011000000010 ( 107)                 BRZP  Check_For_First
(3105) 94BF  1001010010111111 ( 108)                 NOT   R2 R2
(3106) 14A1  0001010010100001 ( 109)                 ADD   R2 R2 #1
(3107) 16E0  0001011011100000 ( 111) Check_For_First ADD   R3 R3 #0
(3108) 040C  0000010000001100 ( 112)                 BRZ   Add_Last_Character
(3109) 5920  0101100100100000 ( 114)                 AND   R4 R4 #0
(310A) 1929  0001100100101001 ( 115)                 ADD   R4 R4 #9
(310B) 1A60  0001101001100000 ( 116)                 ADD   R5 R1 #0
(310C) 6F80  0110111110000000 ( 118) Multiply_By_10  LDR   R7 R6 #0
(310D) 0803  0000100000000011 ( 119)                 BRN   Check_Overflow_For_Negative
(310E) 1245  0001001001000101 ( 120)                 ADD   R1 R1 R5
(310F) 0827  0000100000100111 ( 121)                 BRN   Input_Overflow_Handler
(3110) 0E02  0000111000000010 ( 122)                 BRNZP Continue_Multiplication
(3111) 1245  0001001001000101 ( 124) Check_Overflow_For_Negative ADD   R1 R1 R5
(3112) 0224  0000001000100100 ( 125)                 BRP   Input_Overflow_Handler
(3113) 193F  0001100100111111 ( 127) Continue_Multiplication ADD   R4 R4 #-1
(3114) 03F7  0000001111110111 ( 128)                 BRP   Multiply_By_10
(3115) 6F80  0110111110000000 ( 131) Add_Last_Character LDR   R7 R6 #0
(3116) 0803  0000100000000011 ( 132)                 BRN   Add_Negative
(3117) 1242  0001001001000010 ( 133)                 ADD   R1 R1 R2
(3118) 081E  0000100000011110 ( 134)                 BRN   Input_Overflow_Handler
(3119) 0E02  0000111000000010 ( 135)                 BRNZP End_Add_Last_Character
(311A) 1242  0001001001000010 ( 137) Add_Negative    ADD   R1 R1 R2
(311B) 021B  0000001000011011 ( 138)                 BRP   Input_Overflow_Handler
(311C) 16E1  0001011011100001 ( 140) End_Add_Last_Character ADD   R3 R3 #1
(311D) 0FD5  0000111111010101 ( 141)                 BRNZP Get_Input_Loop
(311E) 6F80  0110111110000000 ( 144) First_Character_Handler LDR   R7 R6 #0
(311F) 19E2  0001100111100010 ( 145)                 ADD   R4 R7 #2
(3120) 0A02  0000101000000010 ( 146)                 BRNP  Check_For_Zero
(3121) 1FE1  0001111111100001 ( 147)                 ADD   R7 R7 #1
(3122) 7F80  0111111110000000 ( 148)                 STR   R7 R6 #0
(3123) 2B58  0010101101011000 ( 150) Check_For_Zero  LD    R5 Zero_ASCII_Check
(3124) 1805  0001100000000101 ( 151)                 ADD   R4 R0 R5
(3125) 0A05  0000101000000101 ( 152)                 BRNP  Check_For_Minus
(3126) 6F80  0110111110000000 ( 153)                 LDR   R7 R6 #0
(3127) 09CB  0000100111001011 ( 154)                 BRN   Get_Input_Loop
(3128) 1FE1  0001111111100001 ( 155)                 ADD   R7 R7 #1
(3129) 7F80  0111111110000000 ( 156)                 STR   R7 R6 #0
(312A) 0FC8  0000111111001000 ( 157)                 BRNZP Get_Input_Loop
(312B) 2B4F  0010101101001111 ( 159) Check_For_Minus LD    R5 Minus_ASCII_Check
(312C) 1805  0001100000000101 ( 160)                 ADD   R4 R0 R5
(312D) 0BCB  0000101111001011 ( 161)                 BRNP  Check_Character
(312E) 6F80  0110111110000000 ( 162)                 LDR   R7 R6 #0
(312F) 0A03  0000101000000011 ( 163)                 BRNP  Invalid_Input_Handler
(3130) 1FFE  0001111111111110 ( 164)                 ADD   R7 R7 #-2
(3131) 7F80  0111111110000000 ( 165)                 STR   R7 R6 #0
(3132) 0FC0  0000111111000000 ( 166)                 BRNZP Get_Input_Loop
(3133) 5FE0  0101111111100000 ( 169) Invalid_Input_Handler AND   R7 R7 #0
(3134) 1FFF  0001111111111111 ( 170)                 ADD   R7 R7 #-1
(3135) 7F81  0111111110000001 ( 171)                 STR   R7 R6 #1
(3136) 0E03  0000111000000011 ( 172)                 BRNZP Error_Handler_Loop
(3137) 5FE0  0101111111100000 ( 175) Input_Overflow_Handler AND   R7 R7 #0
(3138) 1FE1  0001111111100001 ( 176)                 ADD   R7 R7 #1
(3139) 7F81  0111111110000001 ( 177)                 STR   R7 R6 #1
(313A) F020  1111000000100000 ( 180) Error_Handler_Loop TRAP  x20
(313B) F021  1111000000100001 ( 181)                 TRAP  x21
(313C) 1836  0001100000110110 ( 182)                 ADD   R4 R0 #-10
(313D) 0403  0000010000000011 ( 183)                 BRZ   End_Error_Handler_Loop
(313E) 6F81  0110111110000001 ( 184)                 LDR   R7 R6 #1
(313F) 03B9  0000001110111001 ( 185)                 BRP   Check_Character
(3140) 09F9  0000100111111001 ( 186)                 BRN   Error_Handler_Loop
(3141) 6F81  0110111110000001 ( 188) End_Error_Handler_Loop LDR   R7 R6 #1
(3142) 0201  0000001000000001 ( 189)                 BRP   Load_Overflow_Message
(3143) 0802  0000100000000010 ( 190)                 BRN   Load_Invalid_Message
(3144) E138  1110000100111000 ( 192) Load_Overflow_Message LEA   R0 Overflow_Error_Message
(3145) 0E01  0000111000000001 ( 193)                 BRNZP Reset_And_Print_Message
(3146) E165  1110000101100101 ( 195) Load_Invalid_Message LEA   R0 Invalid_Error_Message
(3147) F022  1111000000100010 ( 197) Reset_And_Print_Message TRAP  x22
(3148) 5260  0101001001100000 ( 198)                 AND   R1 R1 #0
(3149) 56E0  0101011011100000 ( 199)                 AND   R3 R3 #0
(314A) 7380  0111001110000000 ( 200)                 STR   R1 R6 #0
(314B) 7381  0111001110000001 ( 201)                 STR   R1 R6 #1
(314C) 0FA6  0000111110100110 ( 202)                 BRNZP Get_Input_Loop
(314D) 16E0  0001011011100000 ( 205) End_GetNum      ADD   R3 R3 #0
(314E) 0A04  0000101000000100 ( 206)                 BRNP  Store_Input_Value
(314F) 6F80  0110111110000000 ( 207)                 LDR   R7 R6 #0
(3150) 05F5  0000010111110101 ( 208)                 BRZ   Load_Invalid_Message
(3151) 19E2  0001100111100010 ( 209)                 ADD   R4 R7 #2
(3152) 05F3  0000010111110011 ( 210)                 BRZ   Load_Invalid_Message
(3153) 1060  0001000001100000 ( 212) Store_Input_Value ADD   R0 R1 #0
(3154) 6382  0110001110000010 ( 215)                 LDR   R1 R6 #2
(3155) 6583  0110010110000011 ( 216)                 LDR   R2 R6 #3
(3156) 6784  0110011110000100 ( 217)                 LDR   R3 R6 #4
(3157) 6985  0110100110000101 ( 218)                 LDR   R4 R6 #5
(3158) 6B86  0110101110000110 ( 219)                 LDR   R5 R6 #6
(3159) 6F87  0110111110000111 ( 220)                 LDR   R7 R6 #7
(315A) 1DA8  0001110110101000 ( 221)                 ADD   R6 R6 #8
(315B) C1C0  1100000111000000 ( 223)                 RET   
(315C) 0000  0000000000000000 ( 231) PrintNum_String .FILL x0000
(315D) 0000  0000000000000000 ( 231)                 .FILL x0000
(315E) 0000  0000000000000000 ( 231)                 .FILL x0000
(315F) 0000  0000000000000000 ( 231)                 .FILL x0000
(3160) 0000  0000000000000000 ( 231)                 .FILL x0000
(3161) 0000  0000000000000000 ( 232) End_PrintNum_String .FILL x0000
(3162) 002D  0000000000101101 ( 234) Minus_ASCII     .FILL x002D
(3163) 0030  0000000000110000 ( 235) Zero_ASCII      .FILL x0030
(3164) 1DBB  0001110110111011 ( 239) PrintNum        ADD   R6 R6 #-5
(3165) 7380  0111001110000000 ( 240)                 STR   R1 R6 #0
(3166) 7581  0111010110000001 ( 241)                 STR   R2 R6 #1
(3167) 7782  0111011110000010 ( 242)                 STR   R3 R6 #2
(3168) 7983  0111100110000011 ( 243)                 STR   R4 R6 #3
(3169) 7F84  0111111110000100 ( 244)                 STR   R7 R6 #4
(316A) 5020  0101000000100000 ( 247)                 AND   R0 R0 #0
(316B) 5260  0101001001100000 ( 248)                 AND   R1 R1 #0
(316C) 54A0  0101010010100000 ( 249)                 AND   R2 R2 #0
(316D) 56E0  0101011011100000 ( 250)                 AND   R3 R3 #0
(316E) 5920  0101100100100000 ( 251)                 AND   R4 R4 #0
(316F) 6185  0110000110000101 ( 257)                 LDR   R0 R6 #5
(3170) 25F2  0010010111110010 ( 258)                 LD    R2 Zero_ASCII
(3171) E7EF  1110011111101111 ( 259)                 LEA   R3 End_PrintNum_String
(3172) 1020  0001000000100000 ( 262)                 ADD   R0 R0 #0
(3173) 0605  0000011000000101 ( 263)                 BRZP  Extract_Digits_Loop
(3174) 1820  0001100000100000 ( 264)                 ADD   R4 R0 #0
(3175) 21EC  0010000111101100 ( 265)                 LD    R0 Minus_ASCII
(3176) F021  1111000000100001 ( 266)                 TRAP  x21
(3177) 913F  1001000100111111 ( 267)                 NOT   R0 R4
(3178) 1021  0001000000100001 ( 268)                 ADD   R0 R0 #1
(3179) 16FF  0001011011111111 ( 271) Extract_Digits_Loop ADD   R3 R3 #-1
(317A) 5260  0101001001100000 ( 273)                 AND   R1 R1 #0
(317B) 1836  0001100000110110 ( 275) Divide_By_10    ADD   R4 R0 #-10
(317C) 0803  0000100000000011 ( 276)                 BRN   Continue_Extract_Digits
(317D) 1261  0001001001100001 ( 277)                 ADD   R1 R1 #1
(317E) 1036  0001000000110110 ( 278)                 ADD   R0 R0 #-10
(317F) 0FFB  0000111111111011 ( 279)                 BRNZP Divide_By_10
(3180) 1002  0001000000000010 ( 282) Continue_Extract_Digits ADD   R0 R0 R2
(3181) 70C0  0111000011000000 ( 283)                 STR   R0 R3 #0
(3182) 1060  0001000001100000 ( 284)                 ADD   R0 R1 #0
(3183) 03F5  0000001111110101 ( 285)                 BRP   Extract_Digits_Loop
(3184) 10E0  0001000011100000 ( 287)                 ADD   R0 R3 #0
(3185) F022  1111000000100010 ( 288)                 TRAP  x22
(3186) 6380  0110001110000000 ( 291)                 LDR   R1 R6 #0
(3187) 6581  0110010110000001 ( 292)                 LDR   R2 R6 #1
(3188) 6782  0110011110000010 ( 293)                 LDR   R3 R6 #2
(3189) 6983  0110100110000011 ( 294)                 LDR   R4 R6 #3
(318A) 6F84  0110111110000100 ( 295)                 LDR   R7 R6 #4
(318B) 1DA5  0001110110100101 ( 296)                 ADD   R6 R6 #5
(318C) C1C0  1100000111000000 ( 298)                 RET   
(318D) 0020  0000000000100000 ( 306) Space_ASCII     .FILL x0020
(318E) 1DBB  0001110110111011 ( 310) printQueensPositions ADD   R6 R6 #-5
(318F) 7380  0111001110000000 ( 311)                 STR   R1 R6 #0
(3190) 7581  0111010110000001 ( 312)                 STR   R2 R6 #1
(3191) 7782  0111011110000010 ( 313)                 STR   R3 R6 #2
(3192) 7983  0111100110000011 ( 314)                 STR   R4 R6 #3
(3193) 7F84  0111111110000100 ( 315)                 STR   R7 R6 #4
(3194) 5020  0101000000100000 ( 318)                 AND   R0 R0 #0
(3195) 5260  0101001001100000 ( 319)                 AND   R1 R1 #0
(3196) 54A0  0101010010100000 ( 320)                 AND   R2 R2 #0
(3197) 56E0  0101011011100000 ( 321)                 AND   R3 R3 #0
(3198) 5920  0101100100100000 ( 322)                 AND   R4 R4 #0
(3199) 6385  0110001110000101 ( 328)                 LDR   R1 R6 #5
(319A) 6586  0110010110000110 ( 329)                 LDR   R2 R6 #6
(319B) 27F1  0010011111110001 ( 330)                 LD    R3 Space_ASCII
(319C) 192A  0001100100101010 ( 331)                 ADD   R4 R4 #10
(319D) 6040  0110000001000000 ( 336) Print_Positions_Loop LDR   R0 R1 #0
(319E) 71BF  0111000110111111 ( 337)                 STR   R0 R6 #-1
(319F) 1DBF  0001110110111111 ( 338)                 ADD   R6 R6 #-1
(31A0) 4FC3  0100111111000011 ( 339)                 JSR   PrintNum
(31A1) 1DA1  0001110110100001 ( 340)                 ADD   R6 R6 #1
(31A2) 10E0  0001000011100000 ( 342)                 ADD   R0 R3 #0
(31A3) F021  1111000000100001 ( 343)                 TRAP  x21
(31A4) 1261  0001001001100001 ( 345)                 ADD   R1 R1 #1
(31A5) 14BF  0001010010111111 ( 346)                 ADD   R2 R2 #-1
(31A6) 03F6  0000001111110110 ( 347)                 BRP   Print_Positions_Loop
(31A7) 1120  0001000100100000 ( 349)                 ADD   R0 R4 #0
(31A8) F021  1111000000100001 ( 350)                 TRAP  x21
(31A9) 6380  0110001110000000 ( 353)                 LDR   R1 R6 #0
(31AA) 6581  0110010110000001 ( 354)                 LDR   R2 R6 #1
(31AB) 6782  0110011110000010 ( 355)                 LDR   R3 R6 #2
(31AC) 6983  0110100110000011 ( 356)                 LDR   R4 R6 #3
(31AD) 6F84  0110111110000100 ( 357)                 LDR   R7 R6 #4
(31AE) 1DA5  0001110110100101 ( 358)                 ADD   R6 R6 #5
(31AF) C1C0  1100000111000000 ( 360)                 RET   
(31B0) 1DBA  0001110110111010 ( 370) isLegal         ADD   R6 R6 #-6
(31B1) 7380  0111001110000000 ( 371)                 STR   R1 R6 #0
(31B2) 7581  0111010110000001 ( 372)                 STR   R2 R6 #1
(31B3) 7782  0111011110000010 ( 373)                 STR   R3 R6 #2
(31B4) 7983  0111100110000011 ( 374)                 STR   R4 R6 #3
(31B5) 7B84  0111101110000100 ( 375)                 STR   R5 R6 #4
(31B6) 7F85  0111111110000101 ( 376)                 STR   R7 R6 #5
(31B7) 5020  0101000000100000 ( 379)                 AND   R0 R0 #0
(31B8) 5260  0101001001100000 ( 380)                 AND   R1 R1 #0
(31B9) 54A0  0101010010100000 ( 381)                 AND   R2 R2 #0
(31BA) 56E0  0101011011100000 ( 382)                 AND   R3 R3 #0
(31BB) 5920  0101100100100000 ( 383)                 AND   R4 R4 #0
(31BC) 5B60  0101101101100000 ( 384)                 AND   R5 R5 #0
(31BD) 5FE0  0101111111100000 ( 386)                 AND   R7 R7 #0
(31BE) 6386  0110001110000110 ( 389)                 LDR   R1 R6 #6
(31BF) 041E  0000010000011110 ( 390)                 BRZ   Return_True
(31C0) 6587  0110010110000111 ( 391)                 LDR   R2 R6 #7
(31C1) 6788  0110011110001000 ( 392)                 LDR   R3 R6 #8
(31C2) 187F  0001100001111111 ( 393)                 ADD   R4 R1 #-1
(31C3) 1484  0001010010000100 ( 396)                 ADD   R2 R2 R4
(31C4) 6A80  0110101010000000 ( 398) isLegal_Loop    LDR   R5 R2 #0
(31C5) 9EFF  1001111011111111 ( 401)                 NOT   R7 R3
(31C6) 1FE1  0001111111100001 ( 402)                 ADD   R7 R7 #1
(31C7) 1FC5  0001111111000101 ( 403)                 ADD   R7 R7 R5
(31C8) 0416  0000010000010110 ( 404)                 BRZ   End_isLegal
(31C9) 9F3F  1001111100111111 ( 407)                 NOT   R7 R4
(31CA) 1FE1  0001111111100001 ( 408)                 ADD   R7 R7 #1
(31CB) 1FC1  0001111111000001 ( 409)                 ADD   R7 R7 R1
(31CC) 9FFF  1001111111111111 ( 410)                 NOT   R7 R7
(31CD) 1FE1  0001111111100001 ( 411)                 ADD   R7 R7 #1
(31CE) 1FC3  0001111111000011 ( 412)                 ADD   R7 R7 R3
(31CF) 9FFF  1001111111111111 ( 413)                 NOT   R7 R7
(31D0) 1FE1  0001111111100001 ( 414)                 ADD   R7 R7 #1
(31D1) 1FC5  0001111111000101 ( 415)                 ADD   R7 R7 R5
(31D2) 040C  0000010000001100 ( 416)                 BRZ   End_isLegal
(31D3) 9F3F  1001111100111111 ( 419)                 NOT   R7 R4
(31D4) 1FE1  0001111111100001 ( 420)                 ADD   R7 R7 #1
(31D5) 1FC1  0001111111000001 ( 421)                 ADD   R7 R7 R1
(31D6) 1FC3  0001111111000011 ( 422)                 ADD   R7 R7 R3
(31D7) 9FFF  1001111111111111 ( 423)                 NOT   R7 R7
(31D8) 1FE1  0001111111100001 ( 424)                 ADD   R7 R7 #1
(31D9) 1FC5  0001111111000101 ( 425)                 ADD   R7 R7 R5
(31DA) 0404  0000010000000100 ( 426)                 BRZ   End_isLegal
(31DB) 14BF  0001010010111111 ( 428)                 ADD   R2 R2 #-1
(31DC) 193F  0001100100111111 ( 429)                 ADD   R4 R4 #-1
(31DD) 07E6  0000011111100110 ( 430)                 BRZP  isLegal_Loop
(31DE) 1021  0001000000100001 ( 433) Return_True     ADD   R0 R0 #1
(31DF) 6380  0110001110000000 ( 437) End_isLegal     LDR   R1 R6 #0
(31E0) 6581  0110010110000001 ( 438)                 LDR   R2 R6 #1
(31E1) 6782  0110011110000010 ( 439)                 LDR   R3 R6 #2
(31E2) 6983  0110100110000011 ( 440)                 LDR   R4 R6 #3
(31E3) 6B84  0110101110000100 ( 441)                 LDR   R5 R6 #4
(31E4) 6F85  0110111110000101 ( 442)                 LDR   R7 R6 #5
(31E5) 1DA6  0001110110100110 ( 443)                 ADD   R6 R6 #6
(31E6) C1C0  1100000111000000 ( 445)                 RET   
(31E7) 0053  0000000001010011 ( 454) Solution_Message .FILL x0053
(31E8) 006F  0000000001101111 ( 454)                 .FILL x006F
(31E9) 006C  0000000001101100 ( 454)                 .FILL x006C
(31EA) 0075  0000000001110101 ( 454)                 .FILL x0075
(31EB) 0074  0000000001110100 ( 454)                 .FILL x0074
(31EC) 0069  0000000001101001 ( 454)                 .FILL x0069
(31ED) 006F  0000000001101111 ( 454)                 .FILL x006F
(31EE) 006E  0000000001101110 ( 454)                 .FILL x006E
(31EF) 003A  0000000000111010 ( 454)                 .FILL x003A
(31F0) 0020  0000000000100000 ( 454)                 .FILL x0020
(31F1) 0000  0000000000000000 ( 454)                 .FILL x0000
(31F2) 1DBA  0001110110111010 ( 458) NQueenSolver    ADD   R6 R6 #-6
(31F3) 7380  0111001110000000 ( 459)                 STR   R1 R6 #0
(31F4) 7581  0111010110000001 ( 460)                 STR   R2 R6 #1
(31F5) 7782  0111011110000010 ( 461)                 STR   R3 R6 #2
(31F6) 7983  0111100110000011 ( 462)                 STR   R4 R6 #3
(31F7) 7B84  0111101110000100 ( 463)                 STR   R5 R6 #4
(31F8) 7F85  0111111110000101 ( 464)                 STR   R7 R6 #5
(31F9) 5020  0101000000100000 ( 467)                 AND   R0 R0 #0
(31FA) 5260  0101001001100000 ( 468)                 AND   R1 R1 #0
(31FB) 54A0  0101010010100000 ( 469)                 AND   R2 R2 #0
(31FC) 56E0  0101011011100000 ( 470)                 AND   R3 R3 #0
(31FD) 5920  0101100100100000 ( 471)                 AND   R4 R4 #0
(31FE) 5B60  0101101101100000 ( 472)                 AND   R5 R5 #0
(31FF) 5FE0  0101111111100000 ( 474)                 AND   R7 R7 #0
(3200) 6386  0110001110000110 ( 477)                 LDR   R1 R6 #6
(3201) 6587  0110010110000111 ( 478)                 LDR   R2 R6 #7
(3202) 6789  0110011110001001 ( 479)                 LDR   R3 R6 #9
(3203) 9AFF  1001101011111111 ( 482)                 NOT   R5 R3
(3204) 1B61  0001101101100001 ( 483)                 ADD   R5 R5 #1
(3205) 1B41  0001101101000001 ( 484)                 ADD   R5 R5 R1
(3206) 041B  0000010000011011 ( 485)                 BRZ   Solution_Found
(3207) 73BD  0111001110111101 ( 489) Find_Solutions_Loop STR   R1 R6 #-3
(3208) 75BE  0111010110111110 ( 490)                 STR   R2 R6 #-2
(3209) 79BF  0111100110111111 ( 491)                 STR   R4 R6 #-1
(320A) 1DBD  0001110110111101 ( 492)                 ADD   R6 R6 #-3
(320B) 4FA4  0100111110100100 ( 493)                 JSR   isLegal
(320C) 1DA3  0001110110100011 ( 494)                 ADD   R6 R6 #3
(320D) 1020  0001000000100000 ( 496)                 ADD   R0 R0 #0
(320E) 040C  0000010000001100 ( 497)                 BRZ   Increment_Iterator
(320F) 1E81  0001111010000001 ( 499)                 ADD   R7 R2 R1
(3210) 79C0  0111100111000000 ( 500)                 STR   R4 R7 #0
(3211) 6188  0110000110001000 ( 503)                 LDR   R0 R6 #8
(3212) 1A61  0001101001100001 ( 504)                 ADD   R5 R1 #1
(3213) 7BBC  0111101110111100 ( 505)                 STR   R5 R6 #-4
(3214) 75BD  0111010110111101 ( 506)                 STR   R2 R6 #-3
(3215) 71BE  0111000110111110 ( 507)                 STR   R0 R6 #-2
(3216) 77BF  0111011110111111 ( 508)                 STR   R3 R6 #-1
(3217) 1DBC  0001110110111100 ( 509)                 ADD   R6 R6 #-4
(3218) 4FD9  0100111111011001 ( 510)                 JSR   NQueenSolver
(3219) 1DA4  0001110110100100 ( 511)                 ADD   R6 R6 #4
(321A) 7188  0111000110001000 ( 513)                 STR   R0 R6 #8
(321B) 1921  0001100100100001 ( 516) Increment_Iterator ADD   R4 R4 #1
(321C) 9AFF  1001101011111111 ( 517)                 NOT   R5 R3
(321D) 1B61  0001101101100001 ( 518)                 ADD   R5 R5 #1
(321E) 1B44  0001101101000100 ( 519)                 ADD   R5 R5 R4
(321F) 0BE7  0000101111100111 ( 520)                 BRNP  Find_Solutions_Loop
(3220) 6188  0110000110001000 ( 522)                 LDR   R0 R6 #8
(3221) 0E09  0000111000001001 ( 523)                 BRNZP End_NQueenSolver
(3222) E1C4  1110000111000100 ( 526) Solution_Found  LEA   R0 Solution_Message
(3223) F022  1111000000100010 ( 527)                 TRAP  x22
(3224) 75BE  0111010110111110 ( 530)                 STR   R2 R6 #-2
(3225) 77BF  0111011110111111 ( 531)                 STR   R3 R6 #-1
(3226) 1DBE  0001110110111110 ( 532)                 ADD   R6 R6 #-2
(3227) 4F66  0100111101100110 ( 533)                 JSR   printQueensPositions
(3228) 1DA2  0001110110100010 ( 534)                 ADD   R6 R6 #2
(3229) 6188  0110000110001000 ( 536)                 LDR   R0 R6 #8
(322A) 1021  0001000000100001 ( 537)                 ADD   R0 R0 #1
(322B) 6380  0110001110000000 ( 541) End_NQueenSolver LDR   R1 R6 #0
(322C) 6581  0110010110000001 ( 542)                 LDR   R2 R6 #1
(322D) 6782  0110011110000010 ( 543)                 LDR   R3 R6 #2
(322E) 6983  0110100110000011 ( 544)                 LDR   R4 R6 #3
(322F) 6B84  0110101110000100 ( 545)                 LDR   R5 R6 #4
(3230) 6F85  0110111110000101 ( 546)                 LDR   R7 R6 #5
(3231) 1DA6  0001110110100110 ( 547)                 ADD   R6 R6 #6
(3232) C1C0  1100000111000000 ( 549)                 RET   
